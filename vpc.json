{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "m1.small",
        "m1.large"
      ],
      "Description": "Choose Instance Type"
    },
    "VpcCIDRBlock": {
      "Type": "String",
      "Default": "190.17.0.0/16",
      "Description": "Choose CIDR for Vpc"
    },
    "Subnet1CIDRBlock": {
      "Type": "String",
      "Default": "190.17.1.0/24",
      "Description": "Choose CIDR for Subnet1"
    },
    "Subnet2CIDRBlock": {
      "Type": "String",
      "Default": "190.17.2.0/24",
      "Description": "Choose CIDR for Subnet2"
    },
    "InstanceKey": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "javahome",
      "Description": "Choose Key for EC2 instance"
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "32": "ami-97785bed"
      },
      "us-west-2": {
        "32": "ami-f2d3638a"
      }
    }
  },
  "Resources": {
    "myVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCIDRBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "CFVPC"
          }
        ]
      }
    },
    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "myVPC"
        },
        "CidrBlock": {
          "Ref": "Subnet1CIDRBlock"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Subnet1"
          }
        ]
      }
    },
    "Subnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "myVPC"
        },
        "CidrBlock": {
          "Ref": "Subnet2CIDRBlock"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Subnet12"
          }
        ]
      }
    },
    "igw": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "igw"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "InternetGatewayId": {
          "Ref": "igw"
        }
      }
    },
    "publicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myVPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicRouteTable"
          }
        ]
      }
    },
    "igwRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "publicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "igw"
        }
      }
    },
    "subnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet2"
        },
        "RouteTableId": {
          "Ref": "publicRouteTable"
        }
      }
    },
    "subnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet1"
        },
        "RouteTableId": {
          "Ref": "publicRouteTable"
        }
      }
    },
    "MyEC2Instance1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum install httpd -y\n",
                "service httpd start\n",
                "chkconfig httpd on\n",
                "echo 'Welcome to CF' > /var/www/html/index.html\n"
              ]
            ]
          }
        },
        "SubnetId": {
          "Ref": "Subnet1"
        },
        "SecurityGroupIds": [
          {
            "Ref": "sgtester"
          }
        ],
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "32"
          ]
        },
        "KeyName": {
          "Ref": "InstanceKey"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Instance1"
          }
        ]
      }
    },
    "sgtester": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "myVPC",
      "Properties": {
        "GroupName": "PublicSecurityGroup",
        "GroupDescription": "vpc tester sg",
        "VpcId": {
          "Ref": "myVPC"
        }
      }
    },
    "sgtesteringress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "sgtester",
      "Properties": {
        "GroupId": {
          "Ref": "sgtester"
        },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    }
  },
  "Outputs": {
    "InstanceID": {
      "Description": "The Instance ID",
      "Value": {
        "Ref": "MyEC2Instance1"
      }
    },
    "InstancePublicIP": {
      "Description": "The Instance ID",
      "Value": {
        "Fn::GetAtt": [
          "MyEC2Instance1",
          "PublicIp"
        ]
      }
    }
  }
}
